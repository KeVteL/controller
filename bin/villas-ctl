#!/usr/bin/env python

import logging
import argparse
import kombu

from villas.controller.config import Config, ConfigType
from villas.controller.command import Command

LOGGER = logging.getLogger(__name__)

_LOG_LEVEL_STRINGS = ['CRITICAL', 'ERROR', 'WARNING', 'INFO', 'DEBUG']

def _log_level_string_to_int(log_level_string):
	if not log_level_string in _LOG_LEVEL_STRINGS:
		message = 'invalid choice: {0} (choose from {1})'.format(log_level_string, _LOG_LEVEL_STRINGS)
		raise argparse.ArgumentTypeError(message)

	log_level_int = getattr(logging, log_level_string, logging.INFO)

	# check the logging log_level_choices have not changed from our expected values
	assert isinstance(log_level_int, int)

	return log_level_int

def setup_logging(args):
	logging.basicConfig(level=args.log_level,
		format='%(asctime)s %(levelname)-8s %(name)s %(message)s',
		datefmt='%Y-%m-%d %H:%M:%S'
	)

	root = logging.getLogger(__name__)
	root.setLevel(args.log_level)

	amqp = logging.getLogger('amqp')
	amqp.setLevel(logging.INFO)

	kombu = logging.getLogger("kombu")
	kombu.setLevel(args.log_level)


def setup_argparse():
	# Main parser
	parser = argparse.ArgumentParser(
		prog = 'villas-ctl'
	)

	parser.add_argument('-b', '--broker',
		help = 'URL of AMQP broker',
		default = "amqp://guest:guest@localhost/%2F"
	)

	parser.add_argument('-c', '--config',
		help = 'Path of configuration file',
		type = ConfigType(),
		default = Config()
	)

	parser.add_argument('--log-level',
		default = 'INFO',
		dest = 'log_level',
		type = _log_level_string_to_int,
		nargs = '?',
		help = 'Set the logging output level. {0}'.format(_LOG_LEVEL_STRINGS)
	)

	# Add parsers for subcommands
	Command.register_subcommands(parser)

	return parser

if __name__ == '__main__':
	parser = setup_argparse()
	args = parser.parse_args()

	setup_logging(args)

	with kombu.Connection(args.broker) as c:
		try:
			args.func(c, args)
		except KeyboardInterrupt:
			LOGGER.info("Ctrl-C... Abort")
