---
openapi: 3.1.0
info:
  title: VILLAScontroller API
  description: 'A HTTP/REST API for controlling VILLAScontroller remotely for querying component status as well as issuing control actions.'
  version: 0.0.1
  contact:
    name: "Steffen Vogel"
    email: "post@steffenvogel.de"
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

servers:
- url: https://villas.k8s.eonerc.rwth-aachen.de/controller/api/v1
  description: Demo instance at RWTH Aachen

paths:

  /:
    get:
      summary: 'Get status of VILLAScontroller daemon'
      operationId: getStatus
      tags:
      - status
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  components:
                    type: array
                    items:
                      type: string
                      format: uuid
                  status:
                    type: object
                    properties:
                      version:
                        type: string
                      uptime:
                        type: number
                      host:
                        type: string
                      kernel:
                        type: object
                        properties:
                          sysname:
                            type: string
                          nodename:
                            type: string
                          release:
                            type: string
                          version:
                            type: string
                          machine:
                            type: string

              example:
                components:
                  - f4751894-205e-11eb-aefb-0741ff98abca
                  - 3ddd318e-fee1-46d7-bff4-7c064d640d4e
                status:
                  version: 0.3.2
                  uptime: 15.38102650642395
                  host: lat.0l.de
                  kernel:
                    sysname: Linux
                    nodename: lat.0l.de
                    release: 5.13.14-200.fc34.x86_64
                    version: '#1 SMP Fri Sep 3 15:33:01 UTC 2021'
                    machine: x86_64

  /health:
    get:
      operationId: getHealth
      summary: Query health of daemon.
      tags:
      - status
      responses:
        '200':
          description: The daemon is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              example:
                status: ok


  /component/{uuid}:
    get:
      summary: 'Get the current status of a component'
      operationId: getComponentStatus

      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid

      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  components:
                    type: array
                    items:
                      type: string
                      format: uuid

                  status:
                    type: object
                    properties:
                      managed_by:
                        type: string
                        format: uuid

                      state:
                        type: string
                        enum:
                        - idle
                        - starting
                        - running
                        - stopping
                        - pausing
                        - paused
                        - resuming
                        - error
                        - resetting
                        - shuttingdown
                        - shutdown
                        - gone

                      version:
                        type: string
                      uptime:
                        type: number
                      host:
                        type: string
                      kernel:
                        type: object
                        properties:
                          sysname:
                            type: string
                          nodename:
                            type: string
                          release:
                            type: string
                          version:
                            type: string
                          machine:
                            type: string

                  properties:
                    type: object
                    properties:
                      category:
                        type: string
                        enum:
                        - manager
                        - simulator
                        - gateway
                      type:
                        type: string
                        pattern: '[a-z-]+'
                      name:
                        type: string
                      realm:
                        type: string
                        pattern: '[a-z0-9-.]+'
                      uuid:
                        type: string
                        format: uuid

                    additionalProperties: true

                  schema:
                    type: object
                    additionalProperties:
                      $ref: 'https://json-schema.org/draft/2020-12/schema'

              example:
                components: []
                status:
                  state: idle
                  version: 0.3.2
                  uptime: 480.25064611434937
                  host: lat.0l.de
                  kernel:
                    sysname: Linux
                    nodename: lat.0l.de
                    release: 5.13.14-200.fc34.x86_64
                    version: '#1 SMP Fri Sep 3 15:33:01 UTC 2021'
                    machine: x86_64
                  managed_by: f4751894-205e-11eb-aefb-0741ff98abca
                properties:
                  category: manager
                  type: generic
                  name: Standard Controller
                  realm: de.rwth-aachen.eonerc.acs
                  uuid: f4751894-205e-11eb-aefb-0741ff98abca
                schema:
                  create:
                    # $schema: 'http://json-schema.org/draft-07/schema'
                    type: object
                    default: {}
                    required:
                    - name
                    - category
                    - location
                    - owner
                    - realm
                    - type
                    - api_url
                    - ws_url
                    properties:
                      name:
                        type: string
                        title: Component name
                        default: New Component
                        examples: 'Generic Simulator #1'
                      owner:
                        type: string
                        title: Component owner
                        examples:
                        - rmr
                        - svg
                      realm:
                        type: string
                        title: Component realm
                        default: ''
                        examples:
                        - de.rwth-aachen.eonerc.acs
                      category:
                        type: string
                        title: Component category
                        examples:
                        - simulator
                      location:
                        type: string
                        title: Component location
                        examples:
                        - Richard's PC
                      type:
                        type: string
                        default: generic
                      uuid:
                        type: 'string'
                        format: uuid
                      ws_url:
                        type: string
                        examples:
                        - 'https://villas.k8s.eonerc.rwth-aachen.de/ws/relay/generic_1'
                      api_url:
                        type: string
                        examples:
                        - 'https://villas.k8s.eonerc.rwth-aachen.de/api/ic/generic_1'
                      shell:
                        type: boolean
                        default: false
                        examples:
                        - true
                      whitelist:
                        type: array
                        title: The whitelist schema
                        default: []
                        examples:
                        - - /sbin/ping
                          - ^echo
                        additionalItems: true
                        items:
                          anyOf:
                          - type: string
                            examples:
                            - /sbin/ping
                            - ^echo

    post:
      operationId: executeComponentAction
      summary: 'Send a control action to the component'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - start
                  - stop
                  - pause
                  - resume
                  - create
                  - delete
                  - shutdown
                  - reset
                parameters:
                  oneOf:
                  - $ref: ../villas/controller/schemas/manager/generic/create.yaml
                  - $ref: ../villas/controller/schemas/manager/kubernetes/create.yaml
                  - $ref: ../villas/controller/schemas/simulator/dpsim/start.yaml
                  - $ref: ../villas/controller/schemas/simulator/dummy/start.yaml

      responses:
        '200':
          description: ''
          content:
            application/json: {}


              # example:
              #   runtime: 10.2
